services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  rappitors_api:
    build:
      context: ./src/rappitors_api
    image: rappitors_api
    container_name: rappitors_api
    ports:
      - "8000:8000"
    volumes:
      - ./src/config:/app/config
    environment:
      - FIREBASE_CREDENTIALS=/app/config/alocacao-entregadores-firebase-credenciais.json
      - VIRTUAL_HOST=api.local  
      - VIRTUAL_PORT=8000      
    networks:
      - app-network

  monitor_service:
    build:
      context: ./src/system_performance/monitor_service
    image: monitor_service
    container_name: monitor_service
    depends_on:
      - rappitors_api
    networks:
      - app-network
    ports:
      - "8089:8089"  # UI do Locust
      - "9646:9646"  # MÃ©tricas do Prometheus
    volumes:
      - ./src/config:/app/config
    command: >
      /entrypoint.sh
      
  cronjob_service:
    build:
      context: ./src/system_performance/verify_protocol
    image: cronjob_service
    container_name: cronjob_service
    volumes:
      - ./src/config:/app/config  
    environment:
      - FIREBASE_CREDENTIALS=/app/config/alocacao-entregadores-firebase-credenciais.json
    depends_on:
      - rappitors_api
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - prometheus 
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana_data:/var/lib/grafana

networks:
  app-network:
    driver: bridge

volumes:
  grafana-data:
